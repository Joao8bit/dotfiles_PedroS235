#!/bin/bash

#-------------------------------------------------------------------------------
# -                                 Variables                                  -
#-------------------------------------------------------------------------------

# Colors
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White


#-------------------------------------------------------------------------------
# -                                 Variables                                  -
#-------------------------------------------------------------------------------

curr_os=$(uname -s)

#-------------------------------------------------------------------------------
# -                            Install dependencies                            -
#-------------------------------------------------------------------------------

print_info(){
    echo -e "${BGreen}[Info] - ${Color_Off}${1}"
}

print_warning(){
    echo -e "${BYellow}[Warn] - ${Color_Off}${1}"
}

print_error(){
    echo -e "${BRed}[Error] - ${Color_Off}${1}"
}

#-------------------------------------------------------------------------------
# -                          Setup MacOS dependencies                          -
#-------------------------------------------------------------------------------

macos_setup() {
    if ! command -v brew &> /dev/null; then
        echo -e "${BYellow}Installing Homebrew...${Color_Off}"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo -e "${BGreen}Homebrew installed!${Color_Off}"
    fi

    # Install tmux
    echo -e "${BYellow}Installing tmux...${Color_Off}"
    brew install tmux
    echo -e "${BGreen}Tmux installed!${Color_Off}"
}

#-------------------------------------------------------------------------------
# -                          Setup Linux dependencies                          -
#-------------------------------------------------------------------------------

linux_setup(){
    # LINUX
    print_info "Updating apt packages..."
    sudo apt-get update && sudo apt-get upgrade -y
    print_info "Finished updating apt packages"

    print_info "Installing general dependencies..."
    sudo apt-get install -y tmux python3-pip python3-venv git curl zsh xclip
    print_info "General dependencies installed"

    print_info "Setting zsh as default shell"
    chsh -s "$(which zsh)"

    print_info "Installing oh-my-zsh..."
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    print_info "Finished installing oh-my-zsh"

    print_info "Installing Nerd Fonts FantasqueSansMono..."
    mkdir -p ~/.local/share/fonts
    curl -fLo ~/.local/share/fonts/FantasqueSansMono-Regular-NerdFontComplete.ttf --create-dirs
    print_info "Finished installing Nerd Fonts FantasqueSansMono"

    print_info "Installing startship..."
    curl -sS https://starship.rs/install.sh | sh
    print_info "Finished installing startship"

    print_info "Installing tmux plugin manager..."
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    print_info "Finished installing tmux plugin manager"

    print_info "Geneerating ssh key..."
    read -r -p "Please enter your email: " email
    ssh-keygen -t ed25519 -C "$email"
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_ed25519
    print_info "SSH key generated. Copy the following key and add it to your github account:"
    cat "$HOME/.ssh/id_ed25519.pub" | xclip -selection c
    read -r -p "Press enter once keys added to your GitHub account..."

    print_info "Cloning dotfiles..."
    git clone --bare git@github.com:PedroS235/dotfiles.git "$HOME/.dotfiles"
    function dotfiles {
       /usr/bin/git --git-dir="$HOME/.dotfiles/" --work-tree="$HOME"
    }
    dotfiles checkout
    dotfiles checkout
    dotiles config status.showUntrackedFiles no

    print_info "Setup finished! Restarting..."
    read -r -p "Press enter to restart or Ctrl-C to abort..."
}
    
if [[ "$curr_os" == "Darwin" ]]; then
    print_info "MacoS has been detected. Setting up for MacOS..."
    read -r -p "Press enter to continue..."
    macos_setup
else
    print_info "Linux has been detected. Setting up for Linux..."
    read -r -p "Press enter to continue..."
    linux_setup
fi
echo -e "${BGreen}Dependencies installed!${Color_Off}"
